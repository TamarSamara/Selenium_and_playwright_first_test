{"name": "test_empty_email_valid_password", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'AUTHENTICATION' == 'MY ACCOUNT'\n  - MY ACCOUNT\n  + AUTHENTICATION", "trace": "@pytest.mark.failed\n    def test_empty_email_valid_password():  # -> Error\n        '''\n        Check empty email and valid password\n        :return: Error message: \"An email address required.\"\n        failed\n        '''\n        startTest()\n        username = \"\"\n        password = \"tadddDm123R&\"\n>       email_try_except(username, password)\n\ntestLogin1.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nusername = '', password = 'tadddDm123R&'\n\n    def email_try_except(username, password):\n        try:\n            login(id=username, param=\"email\")\n            time.sleep(1)\n            login(id=password, param=\"passwd\")\n            time.sleep(1)\n        except Exception as e:\n            print(\"error in code: {}\".format(e))\n    \n        finally:\n            element1 = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID,\n                                                                                       \"SubmitLogin\")))\n            element1.click()\n            # ErrorPage = \"\"\n            # ErrorPage = driver.find_element(By.TAG_NAME, \"h1\").text\n            # if ErrorPage ==\n            elem_page_heading = driver.find_element(By.CLASS_NAME, \"page-heading\")\n            print(f'page-headinggggggggggg {elem_page_heading.text}')\n            elemerror = driver.find_element(By.TAG_NAME, \"ol\")\n            print(f'elemerror.text {elemerror.text}')\n            logging.info(f'Successful Login')\n            logging.warning(f'Error message: {elemerror.text}')\n>           assert elem_page_heading.text == \"MY ACCOUNT\"\nE           AssertionError: assert 'AUTHENTICATION' == 'MY ACCOUNT'\nE             - MY ACCOUNT\nE             + AUTHENTICATION\n\ntestLogin1.py:54: AssertionError"}, "description": "\n    Check empty email and valid password\n    :return: Error message: \"An email address required.\"\n    failed\n    ", "attachments": [{"name": "log", "source": "e3b49413-6240-44d6-abeb-2a9bc3ce427b-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "b60ce08d-6396-40fe-9152-b13c2b1e10e5-attachment.txt", "type": "text/plain"}], "start": 1660433373432, "stop": 1660433389634, "uuid": "f631e576-0dc5-4add-ad98-7674459116f0", "historyId": "e07280878c09e12c523065ea10744744", "testCaseId": "03347c8bb0778ec64961cd1d4c207f3a", "fullName": "testLogin1#test_empty_email_valid_password", "labels": [{"name": "tag", "value": "failed"}, {"name": "suite", "value": "testLogin1"}, {"name": "host", "value": "tamar1"}, {"name": "thread", "value": "24240-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testLogin1"}]}