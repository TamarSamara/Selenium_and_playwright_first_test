{"name": "test_hebrew_email_valid_password", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'AUTHENTICATION' == 'MY ACCOUNT'\n  - MY ACCOUNT\n  + AUTHENTICATION", "trace": "@pytest.mark.failed\n    def test_hebrew_email_valid_password():  # -> Error\n        '''\n        Check hebrew email and valid password\n        :return: Error message: \"Invalid email address.\"\n        failed\n        '''\n        startTest()\n        username = \"תמרסמארה\"\n        password = \"tadddDm123R&\"\n>       email_try_except(username, password)\n\ntestLogin1.py:135: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nusername = 'תמרסמארה', password = 'tadddDm123R&'\n\n    def email_try_except(username, password):\n        try:\n            login(id=username, param=\"email\")\n            time.sleep(1)\n            login(id=password, param=\"passwd\")\n            time.sleep(1)\n        except Exception as e:\n            print(\"error in code: {}\".format(e))\n    \n        finally:\n            element1 = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID,\n                                                                                       \"SubmitLogin\")))\n            element1.click()\n            # ErrorPage = \"\"\n            # ErrorPage = driver.find_element(By.TAG_NAME, \"h1\").text\n            # if ErrorPage ==\n            elem_page_heading = driver.find_element(By.CLASS_NAME, \"page-heading\")\n            print(f'page-headinggggggggggg {elem_page_heading.text}')\n            elemerror = driver.find_element(By.TAG_NAME, \"ol\")\n            print(f'elemerror.text {elemerror.text}')\n            logging.info(f'Successful Login')\n            logging.warning(f'Error message: {elemerror.text}')\n>           assert elem_page_heading.text == \"MY ACCOUNT\"\nE           AssertionError: assert 'AUTHENTICATION' == 'MY ACCOUNT'\nE             - MY ACCOUNT\nE             + AUTHENTICATION\n\ntestLogin1.py:54: AssertionError"}, "description": "\n    Check hebrew email and valid password\n    :return: Error message: \"Invalid email address.\"\n    failed\n    ", "attachments": [{"name": "log", "source": "f59f7260-835e-40a5-9084-3910721381d7-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "9b86d7c3-13c4-4d4b-8a18-bf3cfc638a60-attachment.txt", "type": "text/plain"}], "start": 1660433389660, "stop": 1660433401683, "uuid": "c5c3c7c5-0b2a-4855-a9f7-a7b9e83ec6e1", "historyId": "b2081e0564814bcf04b131d387981847", "testCaseId": "2b42c7815224121d9a72027cda4b4573", "fullName": "testLogin1#test_hebrew_email_valid_password", "labels": [{"name": "tag", "value": "failed"}, {"name": "suite", "value": "testLogin1"}, {"name": "host", "value": "tamar1"}, {"name": "thread", "value": "24240-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testLogin1"}]}